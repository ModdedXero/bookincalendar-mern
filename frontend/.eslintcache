[{"C:\\Users\\blake\\Documents\\VS Code\\bookincalendar-mern\\frontend\\src\\components\\App.js":"1","C:\\Users\\blake\\Documents\\VS Code\\bookincalendar-mern\\frontend\\src\\components\\Website\\Home.js":"2","C:\\Users\\blake\\Documents\\VS Code\\bookincalendar-mern\\frontend\\src\\contexts\\AuthContext.js":"3"},{"size":1381,"mtime":1607793023994,"results":"4","hashOfConfig":"5"},{"size":149,"mtime":1607628223027,"results":"6","hashOfConfig":"5"},{"size":2941,"mtime":1607793024018,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6vzb7p",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\blake\\Documents\\VS Code\\bookincalendar-mern\\frontend\\src\\components\\App.js",[],"C:\\Users\\blake\\Documents\\VS Code\\bookincalendar-mern\\frontend\\src\\components\\Website\\Home.js",[],"C:\\Users\\blake\\Documents\\VS Code\\bookincalendar-mern\\frontend\\src\\contexts\\AuthContext.js",["15"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth, storage } from \"../firebase\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    // User Functions\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email);\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password);\r\n    }\r\n\r\n    // Storage Functions\r\n\r\n    function uploadFile(fileRef = {\r\n        file: \"\",\r\n        fileName: \"\",\r\n        upload: \"\"\r\n        }) {\r\n        const sRef = storage.ref(`${currentUser.uid}/` + fileRef.fileName);\r\n        const task = sRef.put(fileRef.file);\r\n\r\n        task.on(\"state_changed\",\r\n            function progress(snapshot) {\r\n                if (fileRef.updload != null) {\r\n                    const percentage = (snapshot.bytesTransferred /\r\n                        snapshot.totalBytes) * 100;\r\n                    fileRef.upload.value = percentage;\r\n                }\r\n            },\r\n            \r\n            function error(err) {\r\n                console.log(err);\r\n            },\r\n            \r\n            function complete() {\r\n                console.log(\"File Uploaded!\");\r\n            }\r\n        )\r\n\r\n        return task.then();\r\n    }\r\n\r\n    function downloadFile(path) {\r\n        const sRef = storage.ref(`${currentUser.uid}/` + path);\r\n\r\n        return sRef.getDownloadURL();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            // If user isn't set try adding user to DB\r\n            if (user !== currentUser) {\r\n                axios.post(`/api/login/signup`, { email: user.email, uid: user.uid } )\r\n                    .then((res) => console.log(res.data.response))\r\n            }\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        })\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        // User Exports\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword,\r\n\r\n        // Storage Exports\r\n        uploadFile,\r\n        downloadFile\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!isLoading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}",{"ruleId":"16","severity":1,"message":"17","line":89,"column":8,"nodeType":"18","endLine":89,"endColumn":10,"suggestions":"19"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["20"],{"desc":"21","fix":"22"},"Update the dependencies array to be: [currentUser]",{"range":"23","text":"24"},[2521,2523],"[currentUser]"]